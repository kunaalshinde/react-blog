[{"/home/kunal/teqie/react-blog/client/src/index.tsx":"1","/home/kunal/teqie/react-blog/client/src/App.tsx":"2","/home/kunal/teqie/react-blog/client/src/components/Header.tsx":"3","/home/kunal/teqie/react-blog/client/src/pages/home/Home.jsx":"4","/home/kunal/teqie/react-blog/client/src/pages/register/Register.jsx":"5","/home/kunal/teqie/react-blog/client/src/pages/single/Single.jsx":"6","/home/kunal/teqie/react-blog/client/src/pages/login/Login.jsx":"7","/home/kunal/teqie/react-blog/client/src/pages/write/Write.jsx":"8","/home/kunal/teqie/react-blog/client/src/pages/settings/Settings.jsx":"9","/home/kunal/teqie/react-blog/client/src/store/reducers/rootreducer.tsx":"10","/home/kunal/teqie/react-blog/client/src/store/actions.tsx":"11","/home/kunal/teqie/react-blog/client/src/store/reducers/loginreducer.tsx":"12","/home/kunal/teqie/react-blog/client/src/components/Middle.jsx":"13","/home/kunal/teqie/react-blog/client/src/components/Blogs.jsx":"14","/home/kunal/teqie/react-blog/client/src/components/SinglePost.jsx":"15","/home/kunal/teqie/react-blog/client/src/store/actionTypes.tsx":"16","/home/kunal/teqie/react-blog/client/src/components/Blog.jsx":"17","/home/kunal/teqie/react-blog/client/src/store/reducers/blogreducer.tsx":"18","/home/kunal/teqie/react-blog/client/src/api/posts.ts":"19","/home/kunal/teqie/react-blog/client/src/api/user.ts":"20","/home/kunal/teqie/react-blog/client/src/store/store.tsx":"21","/home/kunal/teqie/react-blog/client/src/store/middleware/middleware.js":"22"},{"size":338,"mtime":1647108065245,"results":"23","hashOfConfig":"24"},{"size":1754,"mtime":1647438134993,"results":"25","hashOfConfig":"24"},{"size":2289,"mtime":1647460151269,"results":"26","hashOfConfig":"24"},{"size":697,"mtime":1647596776569,"results":"27","hashOfConfig":"24"},{"size":3505,"mtime":1647538236881,"results":"28","hashOfConfig":"24"},{"size":272,"mtime":1646833649726,"results":"29","hashOfConfig":"24"},{"size":3565,"mtime":1647595278679,"results":"30","hashOfConfig":"24"},{"size":3657,"mtime":1647537562925,"results":"31","hashOfConfig":"24"},{"size":3236,"mtime":1647545872099,"results":"32","hashOfConfig":"24"},{"size":274,"mtime":1647597464896,"results":"33","hashOfConfig":"24"},{"size":695,"mtime":1647512800294,"results":"34","hashOfConfig":"24"},{"size":1784,"mtime":1647625674426,"results":"35","hashOfConfig":"24"},{"size":408,"mtime":1647338385955,"results":"36","hashOfConfig":"24"},{"size":1211,"mtime":1647513864405,"results":"37","hashOfConfig":"24"},{"size":6016,"mtime":1647535749926,"results":"38","hashOfConfig":"24"},{"size":414,"mtime":1647414804065,"results":"39","hashOfConfig":"24"},{"size":924,"mtime":1647372261422,"results":"40","hashOfConfig":"24"},{"size":1657,"mtime":1647332970224,"results":"41","hashOfConfig":"24"},{"size":1031,"mtime":1647537398821,"results":"42","hashOfConfig":"24"},{"size":477,"mtime":1647529465381,"results":"43","hashOfConfig":"24"},{"size":815,"mtime":1647617109334,"results":"44","hashOfConfig":"24"},{"size":1438,"mtime":1647617205397,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"lp03lr",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"61"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"49"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"118","usedDeprecatedRules":"49"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"49"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"61"},"/home/kunal/teqie/react-blog/client/src/index.tsx",[],[],["127","128"],"/home/kunal/teqie/react-blog/client/src/App.tsx",[],[],"/home/kunal/teqie/react-blog/client/src/components/Header.tsx",["129","130","131","132","133"],[],"import React from 'react'\nimport '../index.scss'\nimport store from '../store/store'\nimport  profile from '../images/admin.jpg'\nimport logo from '../images/home-logo.jpg'\nimport { Link, Navigate } from 'react-router-dom'\nimport { connect, useDispatch } from 'react-redux'\nimport { logout } from '../store/actions'\n\nconst mapStateToProps = (state: any) => {\n  return {\n    isLogged: state.login.isLogged\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    Logout: () => dispatch(logout())\n  }\n}\n\nclass Header extends React.Component<{Logout: () => void},{isLogged?: boolean}> {\n\n  constructor(props: any) {\n    super(props);\n\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout(event: any): any {\n    event.preventDefault();\n    this.props.Logout();\n  }\n\n  render() {\n    return (\n      <div className='header-div'>\n        {/* {console.log(`this value ${store.getState().login.isLogged}`)} */}\n        {/* {console.log(log)} */}\n        <div className=\"left\">\n        <Link className=\"link\" to=\"/\">\n        <img src={logo} className=\"header-logo\"/> \n        </Link>Blog\n        </div>\n        <div className=\"center\">\n          <ul className=\"headerList\">\n          <li className=\"headerListItem\"><Link className='link' to=\"/\" >HOME</Link></li>\n          <li className=\"headerListItem\"><Link className='link' to=\"/about/\">ABOUT</Link> </li>\n          <li className=\"headerListItem\">CONTACT</li>\n          <li className=\"headerListItem\"><Link className='link' to=\"/write/\">WRITE</Link></li>\n          {store.getState().login.isLogged\n           && \n            <li className=\"headerListItem\" onClick={this.handleLogout}>LOGOUT</li>}\n            {/* show only when user is logged in */}\n          </ul>\n        </div>\n        <div className=\"right\">\n          {store.getState().login.isLogged ?\n          (<img src={store.getState().login.user.profilePic} className=\"header-Profile\" />) :\n          (<ul className=\"headerList\">\n          <li className=\"headerListItem\"><Link className='link' to=\"/login/\" >LOGIN</Link></li>\n          <li className=\"headerListItem\"><Link className='link' to=\"/register/\">REGISTER</Link></li>\n          </ul>)}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","/home/kunal/teqie/react-blog/client/src/pages/home/Home.jsx",["134","135"],[],"import React, { useEffect } from 'react'\nimport Middle from '../../components/Middle'\nimport Blogs from '../../components/Blogs'\nimport '../../index.scss'\nimport { fetchBlogs } from '../../api/posts';\nimport { useLocation } from 'react-router-dom';\nimport store from '../../store/store';\n\nexport default function Home() {\n  const [blogs, setBlogs] = React.useState([]);\n  const { search } = useLocation();\n\n  const fetchAllBlogs = async () => {\n    const res = await fetchBlogs(search);\n    setBlogs(res.data);\n  }\n\n  useEffect(() => {\n    fetchAllBlogs();\n  },[search]);\n  \n  return (\n    <>\n      <Middle />\n      <div className='home'>\n        <Blogs blogs={blogs}/>\n      </div>\n    </>\n  )\n}\n",["136","137"],"/home/kunal/teqie/react-blog/client/src/pages/register/Register.jsx",["138","139"],[],"import React from 'react'\nimport '../../index.scss'\nimport store from '../../store/store';\nimport { Link, Navigate } from 'react-router-dom'\nimport { register } from '../../store/actions';\nimport { toHaveDisplayValue } from '@testing-library/jest-dom/dist/matchers';\nimport { connect } from 'react-redux';\nimport { signup } from '../../api/user';\n\nconst mapStateToProps = state => {\n  return {\n    isRegistered: state.login.isRegistered\n  }\n}\n\nclass Register extends React.Component {\n\n  constructor(props)\n  { \n    super(props);\n    this.state = {\n      fullname: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      isRegistered: this.props.isRegistered,\n      gotohome: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleRegister = this.handleRegister.bind(this);\n  }\n\n  // In this if email or username is already present in db then it logs error with status 500 else redirects to login page\n  handleRegister = async (event) => {\n    event.preventDefault();\n    const res = await signup({\n      username: this.state.username,\n      fullname: this.state.fullname,\n      email: this.state.email,\n      password: this.state.password,\n    });\n    console.log(res);\n    this.props.register(this.state.isRegistered)\n    this.setState(() => {\n      return {\n        [event.target.name]: event.target.value,\n        isRegistered: true,\n        gotoLogin: true\n      }\n    })\n  }\n\n\n  // On change in form\n  handleChange(event) {\n    this.setState(() => {\n      return  {  \n        [event.target.name]: event.target.value,\n      }\n    })\n  }\n\n\n  render()\n  {\n    if(this.state.gotoLogin)\n    {\n      return ( <Navigate to='/login' /> )\n    }\n    return (\n      <div className=\"register\">\n        <div className=\"inner-register\">\n          <span className=\"register-title\">Register</span>\n          <form className=\"register-form\" onSubmit={this.handleRegister}>\n              <input \n                className=\"register-input\" \n                type=\"email\" \n                placeholder=\"Email\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n              \n              <input \n                type=\"text\" \n                className=\"register-input\" \n                placeholder=\"Full Name\" \n                name=\"fullname\"\n                value={this.state.fullname}\n                onChange={this.handleChange}\n              />\n\n              <input \n                className=\"register-input\" \n                type=\"text\" \n                placeholder=\"Username\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleChange}\n              />\n\n              <input \n                type=\"password\" \n                className=\"register-input\" \n                placeholder=\"Password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n              \n              <button \n                type='submit'\n                className=\"register-button\"\n                disabled={this.username}\n              >\n                Sign Up\n              </button>\n          </form>\n          \n        </div>\n        <div className=\"register-inn\">\n              Already have an account? <Link className=\"link\" to=\"/login/\">&nbsp; Sign In</Link>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default connect(mapStateToProps, { register })(Register)","/home/kunal/teqie/react-blog/client/src/pages/single/Single.jsx",[],[],"/home/kunal/teqie/react-blog/client/src/pages/login/Login.jsx",["140"],[],"import React from 'react'\nimport '../../index.scss'\nimport { Link, Navigate } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { loginstart, loginfailure, loginsuccess } from '../../store/actions'\nimport { isDisabled } from '@testing-library/user-event/dist/utils'\nimport { login } from '../../api/user'\n\nconst mapStateToProps = state => {\n    return {\n      isLogged: state.login.isLogged,\n      user: state.login.user,\n      isFetching: state.login.isFetching\n    }\n}\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//       Loginstart: () => dispatch({type: 'LOGIN_START'}),\n//       Loginsuccess: (data) => dispatch({type: 'LOGIN_SUCCESS', payload: data}),\n//       Loginfailure: () => dispatch({type: 'LOGIN_FAILURE'})\n//       // logout: () => dispatch(logout())\n//   }\n// }\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    Loginstart: () => dispatch(loginstart()),\n    Loginsuccess: (data) => dispatch(loginsuccess(data)),\n    Loginfailure: () => dispatch(loginfailure())\n  }\n}\n\nclass Login extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isLogged: this.props.isLogged,\n      success: false\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLogin = this.handleLogin.bind(this); \n  }\n  \n\n  handleLogin = async (event) => {\n    // Below function prevents page from getting refreshed after submit\n    event.preventDefault();\n    // This is the main call to action \n    // this.props.login(this.state.isLogged);\n    this.props.Loginstart();\n    try {\n      const res = await login({\n        username: this.state.username,\n        password: this.state.password,\n      });\n      this.props.Loginsuccess(res.data);\n    }\n    catch(err) {\n      this.props.Loginfailure();\n    }\n    this.setState(() => {\n      return {\n        // this feature is inrtoduced in ES6 where we can give value to  objects's props using []\n        [event.target.name]: event.target.value,\n        isLogged: true,\n        success: true\n      }\n    })\n  }\n\n  // On change in form\n  handleChange(event) {\n    this.setState(() => {\n      return  {  \n        [event.target.name]: event.target.value,\n      }\n    })\n  }\n  \n  \n  render() {\n    // console.log(this.props.isFetching);\n    if(this.state.success)\n      return ( <Navigate to='/' />)\n    return (\n      <div className=\"login\"> \n        <div className=\"inner-login\">\n          <span className=\"login-title\">Login</span>\n          <form className=\"login-form\" onSubmit={this.handleLogin} >\n              <input \n                className=\"login-input\" \n                type=\"text\"\n                name=\"username\"\n                placeholder='Username'\n                value={this.state.username}\n                onChange={this.handleChange}\n              />\n              <input \n                type=\"password\" \n                className=\"login-input\"\n                name=\"password\"\n                placeholder='Password'\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n              <button \n                className=\"login-button\" \n                type='submit'\n                disabled={this.props.isFetching}\n              >Log In</button>\n          </form>\n        </div>\n        <div className=\"login-inn\">\n              Do not have an account?<Link className=\"link\" to=\"/register/\">&nbsp;Sign Up</Link>\n          </div>\n      </div>\n    )\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","/home/kunal/teqie/react-blog/client/src/pages/write/Write.jsx",["141","142"],[],"import React from 'react'\nimport '../../index.scss'\nimport background from '../../images/snow-forrest.jpg'\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport store from '../../store/store';\nimport { createBlog } from '../../api/posts';\n\nexport default class Write extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"\",\n            body: \"\",\n            isDrafted: false,\n            isPublished: false,\n            gotoHome: false\n        }\n        this.handleTitle = this.handleTitle.bind(this);\n        this.handleBody = this.handleBody.bind(this);\n        this.handlePublish = this.handlePublish.bind(this);\n        this.handleDraft = this.handleDraft.bind(this);\n    }\n\n    handleTitle(event) {\n        this.setState({title: event.target.value});\n    }\n\n    handleBody(event) {\n        this.setState({body: event.target.value});\n    }\n\n    handlePublish = async (event) => {\n        event.preventDefault();\n        const newBlog = {\n            title: this.state.title,\n            body: this.state.body,\n            username: store.getState().login.user.username,\n            published: \"true\",\n            imageURL: \"\",\n        }\n        try {\n            const res = await createBlog(newBlog);\n            console.log(res);\n        }\n        catch(err) {\n            console.log(err);\n        }\n        this.setState({\n            [event.target.name]: event.target.value,\n            isPublished: true,\n            gotoHome: true\n        });\n    }\n\n    handleDraft = async (event) => {\n        event.preventDefault();\n        const newBlog = {\n            title: this.state.title,\n            body: this.state.body,\n            username: store.getState().login.user.username,\n            published: \"false\",\n            imageURL: \"\",\n        }\n        try {\n            const res = await createBlog(newBlog);\n            console.log(res);\n        }\n        catch(err) {\n            console.log(err);\n        }\n        this.setState({\n            [event.target.name]: event.target.value,\n            isDrafted: true,\n            gotoHome: true\n        });\n    }\n\n    render()\n    {\n        if(this.state.gotoHome)\n        {\n            return ( <Navigate to='/' /> );\n        }\n        return (\n            <div className='write'>\n            <form  className='write-form'>\n                <img src={background} className='write-image' />\n                <div className=\"writeform-group\">\n                    <input \n                        type=\"text\" \n                        placeholder='Title' \n                        className='write-input' \n                        autoFocus={true} \n                        value={this.state.title}\n                        onChange={this.handleTitle}\n                    />\n                </div>\n                <div className=\"writeform-group\">\n                    <textarea \n                        className=\"write-input-text\" \n                        placeholder='Write your blog' \n                        value={this.state.body}\n                        onChange={this.handleBody}\n                    ></textarea>\n                </div>\n                    <button\n                        className=\"write-publish\"\n                        onClick={this.handlePublish}\n                    >\n                        Publish\n                    </button>\n                    <button\n                        className='write-draft'\n                        onClick={this.handleDraft}\n                    >\n                        Draft\n                    </button>\n            </form>\n        </div>\n        )\n    }\n}\n","/home/kunal/teqie/react-blog/client/src/pages/settings/Settings.jsx",[],[],"/home/kunal/teqie/react-blog/client/src/store/reducers/rootreducer.tsx",["143"],[],"import { combineReducers } from 'redux';\nimport store from '../store';\nimport blogReducer from './blogreducer';\nimport loginReducer from './loginreducer';\n\n\nconst rootreducer = combineReducers({\n    login: loginReducer,\n    posts: blogReducer\n});\n\nexport default rootreducer","/home/kunal/teqie/react-blog/client/src/store/actions.tsx",[],[],"/home/kunal/teqie/react-blog/client/src/store/reducers/loginreducer.tsx",[],[],"/home/kunal/teqie/react-blog/client/src/components/Middle.jsx",["144"],[],"import React from 'react';\nimport '../index.scss';\nimport image from '../images/main.jpg';\n\nexport default function Middle() {\n  return (\n    <div className=\"middle\">\n        <div className=\"middleTitle\">\n            <span className=\"middleTitleSm\">teqie.io</span>\n            <span className=\"middleTitleLg\">TEQIE.</span>\n        </div>\n        <img src={image} className=\"middle-image\" />\n    </div>\n  )\n}\n","/home/kunal/teqie/react-blog/client/src/components/Blogs.jsx",["145","146"],[],"import React from 'react'\nimport '../index.scss'\nimport store from '../store/store';\nimport Blog from './Blog';\nimport { connect } from 'react-redux';\n\n// const mapStateToProps = (state) => {\n//   return {\n//     blogs: state.posts.blogs\n//   }\n// }\n\nexport default class Blogs extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      blogPosts: []\n    }\n  }\n  \n  // // Components are rendered to the DOM for the fisrt time\n  // componentDidMount() {\n  //   const fetchAllBlogs = async () => {\n  //     const res = await fetchBlogs()\n  //     console.log(res);\n  //   }\n  //   fetchAllBlogs();\n  // }\n\n  componentDidUpdate = (prevProps) => {\n    if(this.props.blogs !== prevProps.blogs) {\n      this.setState({blogPosts: this.props.blogs});\n    }\n  }\n\n  // // Components are removed from DOM \n  // componentWillUnmount() {\n\n  // }\n\n  render()\n  { \n    return (\n        <div className='blogs'>\n          { this.state.blogPosts.map((post, index) => (\n            <Blog \n              key={index} \n              index={index} \n              post={post}\n            />\n            )) } \n        </div>\n    );\n  }\n}\n\n// export default connect(mapStateToProps, { GetAll })(Blogs)","/home/kunal/teqie/react-blog/client/src/components/SinglePost.jsx",["147","148","149"],[],"import { useEffect, useState } from 'react'\nimport {Link, useLocation } from 'react-router-dom'\nimport back from '../images/backgro.jpeg'\nimport store from '../store/store';\nimport { deleteBlog, fetchBlogbyId, updateBlog } from '../api/posts';\nimport '../index.scss';\nimport { fetchuser } from '../api/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\n\nexport default function SinglePost() {\n\n    let name = \"K\";\n    // useSelector is equivalent to mapStateToProps\n    const user = useSelector(state => state.login.user);\n    // useDispatch is equivalent to mapDispatchToProps\n    // const dispatch = useDispatch();\n    const location = useLocation();\n    // pathname: \"blogs/:34556rgfg7y56yyht7th\"\n    const path = location.pathname.split(\"/\")[2]; \n    // console.log(path)\n    const [post, setPost] = useState({});\n    const [title, setTitle] = useState(\"\");\n    const [body, setBody] = useState(\"\");\n    const [published, setPublished] = useState(false);\n    const [updateMode, setUpdateMode] = useState(false);\n\n    // Whenever this path changes(_id changes) execute this function\n    useEffect(() => {\n        const getBlog = async () => {\n        try {\n                const res = await fetchBlogbyId(path);\n                setPost(res.data);\n                setTitle(res.data.title);\n                setBody(res.data.body);\n                setPublished(res.data.published);\n            }\n            catch(err) {\n                console.log(err);\n            }\n        }\n        getBlog();\n    },[path]);\n\n    // Fetch full name to display instead of username\n    const nameofUser = async (username) => {\n        try {\n            const res = await fetchuser(username);\n            console.log(res);\n            name = res.fullname;\n        }\n        catch(err) {}\n    }\n\n    // name = nameofUser(post.username);\n    console.log(name);\n\n    const handleDelete = async () => {\n        try {\n            await deleteBlog(post._id, user.username);\n            window.location.replace(\"/\");\n        }\n        catch(err) {\n            console.log(err);\n        }\n    }\n\n    const handleUpdate = async () => {\n        try {\n            await updateBlog(post._id, user.username, title, body, published);\n            // window.location.reload();\n            setUpdateMode(false);\n        }\n        catch(err)\n        {\n            console.log(err);\n        }\n    }\n\n\n    return (\n        <div className=\"singlepost\">\n            <div className=\"singlepost-wrapper\">\n                <img src={post.imageURL ? post.imageURL : back} \n                    className=\"singlepost-image\" alt=\"\" />\n                {\n                    updateMode ? <input \n                                    type=\"text\" \n                                    value={title} \n                                    className=\"singlepost-title-input\"\n                                    onChange={(e) => setTitle(e.target.value)}\n                                    autoFocus\n                                /> :\n                    (\n                        <h1 className=\"singlepost-title\">\n                        {title}\n                        {post.username === store.getState().login.user?.username &&\n                        (<div className=\"singlepost-edit\">\n                            <i \n                                className=\"singlepost-icon fa-solid fa-pen-to-square\"\n                                onClick={() => setUpdateMode(true)}\n                                ></i>\n                            <i \n                                className=\"singlepost-icon fa-solid fa-trash-can\" \n                                onClick={handleDelete}\n                                ></i>\n                        </div>)}\n                        </h1>\n                    )\n                }\n                <div className=\"singlepost-info\">\n                    <span className=\"singlepost-author\">\n                        <Link to={`/?user=${post.username}`} className=\"link\">\n                        <b>{name}</b> \n                         {/* Change Above  instead of username it should be username*/}\n                        </Link>\n                    </span>\n                    <span className=\"singlepost-date\">\n                        {new Date(post.createdAt).toDateString()}\n                    </span>\n                </div>\n                <div>\n                    {updateMode ?\n                        (<textarea \n                            className='singlepost-desc-input'\n                            value={body}\n                            onChange={(e) => setBody(e.target.value)}\n                        /> ) :\n                    (<p className=\"singlepost-desc\">\n                        {body}\n                    </p>\n                    )}\n                    {updateMode && \n                        (<div className='singlepost-buttons'>\n                            <button \n                                className=\"singlepost-draft\"\n                                value={!published}\n                                onClick={() => setPublished(false)}\n                                disabled={!published}\n                                >\n                            DRAFT\n                            </button>\n                            <button \n                                className=\"singlepost-draft\"\n                                value={published}\n                                onClick={() => setPublished(true)}\n                                disabled={!published}\n                                >\n                            PUBLISHED\n                            </button>\n                            <button \n                                className=\"singlepost-button\"\n                                onClick={handleUpdate}\n                                >\n                            Update\n                            </button>\n                        </div>)\n                    }\n                </div>\n            </div>\n        </div>\n  )\n}\n","/home/kunal/teqie/react-blog/client/src/store/actionTypes.tsx",[],[],"/home/kunal/teqie/react-blog/client/src/components/Blog.jsx",[],[],"/home/kunal/teqie/react-blog/client/src/store/reducers/blogreducer.tsx",[],[],"/home/kunal/teqie/react-blog/client/src/api/posts.ts",["150"],[],"import axios, { AxiosResponse } from \"axios\";\n\nexport const fetchBlogs = (search: any) => axios.get(`/blogs/${search}`);\n\nexport const fetchBlogbyId = (id: any) => axios.get(`/blogs/${id}`);\n\nexport const createBlog = (blog :any) => axios.post(\"/blogs\", blog);\n\nexport const deleteBlog = (id: any, username: string) => axios.delete(`/blogs/${id}`,{\n                                                            data: {username: username}\n                                                        });\n\nexport const updateBlog = (id: any, \n                            username: string, \n                            title: string, \n                            body: string, \n                            published: string) => axios.put(`/blogs/${id}`,                              { username, \n                                                             title, \n                                                             body, \n                                                             published }\n                                );\n","/home/kunal/teqie/react-blog/client/src/api/user.ts",["151"],[],"import axios from \"axios\";\n\ninterface RUser {\n    username: string,\n    fullname: string,\n    email: string,\n    password: string\n}\n\ninterface LUser {\n    username: string,\n    password: string\n}\n\n//Register\nexport const signup = (user: RUser) => axios.post(`/auth/register`, user);\n//Login\nexport const login = (user: LUser) => axios. post(`/auth/login`, user);\n//Fetch Fullname given the username\nexport const fetchuser = (uname: any) => axios.get(`/user?username=${uname}`);","/home/kunal/teqie/react-blog/client/src/store/store.tsx",["152","153"],[],"import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from './reducers/rootreducer'\nimport { persistData, thunkMiddleware } from \"./middleware/middleware\";\n\nconst initialState = {  }\n\nconst middleware = [thunk]\n\nconst saveUser = (state: any) => {\n    try {\n        const localUser = JSON.stringify(state);\n        localStorage.setItem('user', localUser);\n    }\n    catch(err) {}\n}\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunkMiddleware\n        , persistData)\n    // compose(\n        // applyMiddleware(...middleware)\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    // )\n);\n\nstore.subscribe(() => {\n    saveUser(store.getState().login.user);\n})\n\nexport default store;","/home/kunal/teqie/react-blog/client/src/store/middleware/middleware.js",["154"],[],"import { LoginSuccess, Logout } from \"../actionTypes\";\n\n\nexport function thunkMiddleware({dispatch, getState}) {\n    return (next) => action => typeof action === \"function\" ? \n                                action(dispatch, getState) :\n                                next(action)\n}\n\nexport const persistData = store => next => action => {\n    let localState = localStorage.getItem('user');\n    if(localState && typeof JSON.parse(localState) === 'object') {\n        localState = JSON.parse(localState);\n    }\n    else {\n        localStorage = Object.assign({}, {user: action.payload});\n    }\n\n    let result;\n    let newAction;\n    switch(action.type)\n    {\n        case LoginSuccess: newAction = {type: action.type};\n                            newAction.payload = localState;\n                            localStorage.setItem('user', JSON.stringify(localState));\n                            result = next(newAction);\n                            return result;\n\n        case Logout: newAction = { type: action.type }\n                     newAction.payload = {\n                        username: \"\",\n                        fullname: \"\",\n                        email: \"\",\n                        profilePic: \"\",\n                    }\n                    localStorage.setItem('user', JSON.stringify(localState));\n                    result = next(newAction)\n                    return result;\n\n        default: return next(action);\n    }\n}",{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":4,"column":9,"nodeType":"161","messageId":"162","endLine":4,"endColumn":16},{"ruleId":"159","severity":1,"message":"163","line":6,"column":16,"nodeType":"161","messageId":"162","endLine":6,"endColumn":24},{"ruleId":"159","severity":1,"message":"164","line":7,"column":19,"nodeType":"161","messageId":"162","endLine":7,"endColumn":30},{"ruleId":"165","severity":1,"message":"166","line":42,"column":9,"nodeType":"167","endLine":42,"endColumn":50},{"ruleId":"165","severity":1,"message":"166","line":59,"column":12,"nodeType":"167","endLine":59,"endColumn":91},{"ruleId":"168","severity":1,"message":"169","line":7,"column":8,"nodeType":"161","messageId":"162","endLine":7,"endColumn":13},{"ruleId":"170","severity":1,"message":"171","line":20,"column":5,"nodeType":"172","endLine":20,"endColumn":13,"suggestions":"173"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"168","severity":1,"message":"169","line":3,"column":8,"nodeType":"161","messageId":"162","endLine":3,"endColumn":13},{"ruleId":"168","severity":1,"message":"174","line":6,"column":10,"nodeType":"161","messageId":"162","endLine":6,"endColumn":28},{"ruleId":"168","severity":1,"message":"175","line":6,"column":10,"nodeType":"161","messageId":"162","endLine":6,"endColumn":20},{"ruleId":"168","severity":1,"message":"176","line":5,"column":8,"nodeType":"161","messageId":"162","endLine":5,"endColumn":13},{"ruleId":"165","severity":1,"message":"166","line":88,"column":17,"nodeType":"167","endLine":88,"endColumn":65},{"ruleId":"159","severity":1,"message":"169","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":13},{"ruleId":"165","severity":1,"message":"166","line":12,"column":9,"nodeType":"167","endLine":12,"endColumn":53},{"ruleId":"168","severity":1,"message":"169","line":3,"column":8,"nodeType":"161","messageId":"162","endLine":3,"endColumn":13},{"ruleId":"168","severity":1,"message":"177","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":17},{"ruleId":"168","severity":1,"message":"164","line":8,"column":10,"nodeType":"161","messageId":"162","endLine":8,"endColumn":21},{"ruleId":"168","severity":1,"message":"176","line":9,"column":8,"nodeType":"161","messageId":"162","endLine":9,"endColumn":13},{"ruleId":"168","severity":1,"message":"178","line":46,"column":11,"nodeType":"161","messageId":"162","endLine":46,"endColumn":21},{"ruleId":"159","severity":1,"message":"179","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":30},{"ruleId":"180","severity":1,"message":"181","line":18,"column":39,"nodeType":"182","messageId":"183","endLine":18,"endColumn":50,"fix":"184"},{"ruleId":"159","severity":1,"message":"185","line":1,"column":40,"nodeType":"161","messageId":"162","endLine":1,"endColumn":47},{"ruleId":"159","severity":1,"message":"186","line":8,"column":7,"nodeType":"161","messageId":"162","endLine":8,"endColumn":17},{"ruleId":"155","severity":1,"message":"187","line":16,"column":9,"nodeType":"161","messageId":"188","endLine":16,"endColumn":21},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"@typescript-eslint/no-unused-vars","'profile' is defined but never used.","Identifier","unusedVar","'Navigate' is defined but never used.","'useDispatch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'store' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAllBlogs'. Either include it or remove the dependency array.","ArrayExpression",["191"],"'toHaveDisplayValue' is defined but never used.","'isDisabled' is defined but never used.","'axios' is defined but never used.","'connect' is defined but never used.","'nameofUser' is assigned a value but never used.","'AxiosResponse' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property post.","MemberExpression","unexpectedWhitespace",{"range":"192","text":"193"},"'compose' is defined but never used.","'middleware' is assigned a value but never used.","Read-only global 'localStorage' should not be modified.","nativeReassign","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},[334,336],".","Update the dependencies array to be: [fetchAllBlogs, search]",{"range":"196","text":"197"},[561,569],"[fetchAllBlogs, search]"]