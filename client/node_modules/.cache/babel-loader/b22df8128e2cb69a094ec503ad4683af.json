{"ast":null,"code":"var _jsxFileName = \"/home/kunal/teqie/react-blog/client/src/components/Blogs.jsx\";\nimport React from 'react';\nimport '../index.scss';\nimport store from '../store/store';\nimport Blog from './Blog';\nimport { connect } from 'react-redux'; // const mapStateToProps = (state) => {\n//   return {\n//     blogs: state.posts.blogs\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Blogs extends React.Component {\n  constructor(props) {\n    super(props); // console.log('props? ',this.props.blogs);\n\n    this.componentDidUpdate = prevProps => {\n      if (this.props.blogs !== prevProps.blogs) {\n        this.setState({\n          blogPosts: this.props.blogs\n        });\n      }\n    };\n\n    this.state = {\n      blogPosts: [] // blogPosts: [\n      //   {\n      //     title: \"JAVASCRIPT\",\n      //     body: `JavaScript is the world most popular \n      //     lightweight, interpreted compiled programming \n      //     language. It is also known as scripting \n      //     language for web pages. It is well-known for \n      //     the development of web pages, many non-browser \n      //     environments also use it. JavaScript can be \n      //     used for Client-side developments as well as \n      //     Server-side developments`,\n      //     author: \"Nishant Singh \",\n      //     time: \"2hours ago\",\n      //     imgUrl:\n      //       \"https://media.geeksforgeeks.org/img-practice/banner/diving-into-excel-thumbnail.png\",\n      //   },\n      //   {\n      //     title: \"Data Structure \",\n      //     body: `There are many real-life examples of \n      //     a stack. Consider an example of plates stacked \n      //     over one another in the canteen. The plate \n      //     which is at the top is the first one to be \n      //     removed, i.e. the plate which has been placed \n      //     at the bottommost position remains in the \n      //     stack for the longest period of time. So, it \n      //     can be simply seen to follow LIFO(Last In \n      //     First Out)/FILO(First In Last Out) order.`,\n      //     author: \"Suresh Kr\",\n      //     time: \"7 hours ago\",\n      //     imgUrl:\n      //       \"https://media.geeksforgeeks.org/img-practice/banner/coa-gate-2022-thumbnail.png\",\n      //   },\n      //   {\n      //     title: \"Algorithm\",\n      //     body: `The word Algorithm means “a process \n      //     or set of rules to be followed in calculations \n      //     or other problem-solving operations”. Therefore \n      //     Algorithm refers to a set of rules/instructions \n      //     that step-by-step define how a work is to be \n      //     executed upon in order to get the expected \n      //     results. `,\n      //     author: \"Monu Kr\",\n      //     time: \"3 days ago\",\n      //     imgUrl:\n      //       \"https://media.geeksforgeeks.org/img-practice/banner/google-test-series-thumbnail.png\",\n      //   },\n      //   {\n      //     title: \"Computer Network\",\n      //     body: `An interconnection of multiple devices, \n      //     also known as hosts, that are connected using \n      //     multiple paths for the purpose of sending/\n      //     receiving data media. Computer networks can \n      //     also include multiple devices/mediums which \n      //     help in the communication between two different \n      //     devices; these are known as Network devices\n      //     and include things such as routers, switches,\n      //     hubs, and bridges. `, \n      //     author: \"Sonu Kr\",\n      //     time: \"1 week ago\",\n      //     imgUrl:\n      //       \"https://media.geeksforgeeks.org/img-practice/banner/cp-maths-java-thumbnail.png\",\n      //   }\n      // ]\n\n    };\n  } // // Components are rendered to the DOM for the fisrt time\n  // componentDidMount() {\n  //   const fetchAllBlogs = async () => {\n  //     const res = await fetchBlogs()\n  //     console.log(res);\n  //   }\n  //   fetchAllBlogs();\n  // }\n\n\n  // // Components are removed from DOM \n  // componentWillUnmount() {\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blogs\",\n      children: this.state.blogPosts.map((post, index) => /*#__PURE__*/_jsxDEV(Blog, {\n        index: index,\n        post: post\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this);\n  }\n\n} // export default connect(mapStateToProps, { GetAll })(Blogs)","map":{"version":3,"sources":["/home/kunal/teqie/react-blog/client/src/components/Blogs.jsx"],"names":["React","store","Blog","connect","Blogs","Component","constructor","props","componentDidUpdate","prevProps","blogs","setState","blogPosts","state","render","map","post","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAEjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AAFiB,SAgFnBC,kBAhFmB,GAgFGC,SAAD,IAAe;AAClC,UAAG,KAAKF,KAAL,CAAWG,KAAX,KAAqBD,SAAS,CAACC,KAAlC,EAAyC;AACvC,aAAKC,QAAL,CAAc;AAACC,UAAAA,SAAS,EAAE,KAAKL,KAAL,CAAWG;AAAvB,SAAd;AACD;AACF,KApFkB;;AAGjB,SAAKG,KAAL,GAAa;AACXD,MAAAA,SAAS,EAAE,EADA,CAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhEW,KAAb;AAkED,GAvEgD,CAyEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAQA;AACA;AAEA;AAEAE,EAAAA,MAAM,GACN;AACE,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACI,KAAKD,KAAL,CAAWD,SAAX,CAAqBG,GAArB,CAAyB,CAACC,IAAD,EAAOC,KAAP,kBACzB,QAAC,IAAD;AAEE,QAAA,KAAK,EAAEA,KAFT;AAGE,QAAA,IAAI,EAAED;AAHR,SACOC,KADP;AAAA;AAAA;AAAA;AAAA,cADA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWD;;AA1GgD,C,CA6GnD","sourcesContent":["import React from 'react'\nimport '../index.scss'\nimport store from '../store/store';\nimport Blog from './Blog';\nimport { connect } from 'react-redux';\n\n// const mapStateToProps = (state) => {\n//   return {\n//     blogs: state.posts.blogs\n//   }\n// }\n\nexport default class Blogs extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    // console.log('props? ',this.props.blogs);\n    this.state = {\n      blogPosts: []\n      // blogPosts: [\n      //   {\n      //     title: \"JAVASCRIPT\",\n      //     body: `JavaScript is the world most popular \n      //     lightweight, interpreted compiled programming \n      //     language. It is also known as scripting \n      //     language for web pages. It is well-known for \n      //     the development of web pages, many non-browser \n      //     environments also use it. JavaScript can be \n      //     used for Client-side developments as well as \n      //     Server-side developments`,\n      //     author: \"Nishant Singh \",\n      //     time: \"2hours ago\",\n      //     imgUrl:\n      //       \"https://media.geeksforgeeks.org/img-practice/banner/diving-into-excel-thumbnail.png\",\n      //   },\n      //   {\n      //     title: \"Data Structure \",\n      //     body: `There are many real-life examples of \n      //     a stack. Consider an example of plates stacked \n      //     over one another in the canteen. The plate \n      //     which is at the top is the first one to be \n      //     removed, i.e. the plate which has been placed \n      //     at the bottommost position remains in the \n      //     stack for the longest period of time. So, it \n      //     can be simply seen to follow LIFO(Last In \n      //     First Out)/FILO(First In Last Out) order.`,\n      //     author: \"Suresh Kr\",\n      //     time: \"7 hours ago\",\n      //     imgUrl:\n      //       \"https://media.geeksforgeeks.org/img-practice/banner/coa-gate-2022-thumbnail.png\",\n      //   },\n      //   {\n      //     title: \"Algorithm\",\n      //     body: `The word Algorithm means “a process \n      //     or set of rules to be followed in calculations \n      //     or other problem-solving operations”. Therefore \n      //     Algorithm refers to a set of rules/instructions \n      //     that step-by-step define how a work is to be \n      //     executed upon in order to get the expected \n      //     results. `,\n      //     author: \"Monu Kr\",\n      //     time: \"3 days ago\",\n      //     imgUrl:\n      //       \"https://media.geeksforgeeks.org/img-practice/banner/google-test-series-thumbnail.png\",\n      //   },\n      //   {\n      //     title: \"Computer Network\",\n      //     body: `An interconnection of multiple devices, \n      //     also known as hosts, that are connected using \n      //     multiple paths for the purpose of sending/\n      //     receiving data media. Computer networks can \n      //     also include multiple devices/mediums which \n      //     help in the communication between two different \n      //     devices; these are known as Network devices\n      //     and include things such as routers, switches,\n      //     hubs, and bridges. `, \n      //     author: \"Sonu Kr\",\n      //     time: \"1 week ago\",\n      //     imgUrl:\n      //       \"https://media.geeksforgeeks.org/img-practice/banner/cp-maths-java-thumbnail.png\",\n      //   }\n      // ]\n    }\n  }\n  \n  // // Components are rendered to the DOM for the fisrt time\n  // componentDidMount() {\n  //   const fetchAllBlogs = async () => {\n  //     const res = await fetchBlogs()\n  //     console.log(res);\n  //   }\n  //   fetchAllBlogs();\n  // }\n\n  componentDidUpdate = (prevProps) => {\n    if(this.props.blogs !== prevProps.blogs) {\n      this.setState({blogPosts: this.props.blogs});\n    }\n  }\n\n  // // Components are removed from DOM \n  // componentWillUnmount() {\n\n  // }\n\n  render()\n  { \n    return (\n        <div className='blogs'>\n          { this.state.blogPosts.map((post, index) => (\n            <Blog \n              key={index} \n              index={index} \n              post={post}\n            />\n            )) } \n        </div>\n    );\n  }\n}\n\n// export default connect(mapStateToProps, { GetAll })(Blogs)"]},"metadata":{},"sourceType":"module"}