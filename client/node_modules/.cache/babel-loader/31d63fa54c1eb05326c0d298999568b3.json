{"ast":null,"code":"import { BlogCreated, BlogUpdated, BlogRemoved, GetAll, drafted } from \"../actionTypes\";\nconst initialState = {\n  id: \"\",\n  blogs: []\n};\nexport default function blogReducer() {\n  var _state$blogs;\n\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case BlogCreated:\n      return { ...state,\n        blogs: state.blogs.concat(action.blogs[0])\n      };\n\n    case BlogUpdated:\n      const {\n        title,\n        body,\n        published\n      } = action.blogs[0];\n      return { ...state,\n        blogs: (_state$blogs = state.blogs) === null || _state$blogs === void 0 ? void 0 : _state$blogs.map(blog => blog._id !== action.blogs[0]._id ? blog : { ...blog,\n          title,\n          body,\n          published\n        })\n      };\n\n    case BlogRemoved:\n      return { ...state,\n        blogs: state.blogs.filter(blog => blog._id !== action.blogs[0]._id)\n      };\n\n    case drafted:\n      return { ...state,\n        blogs: state.blogs.map(blog => blog._id === action.blogs[0]._id ? { ...blog,\n          published: !blog.published\n        } : blog)\n      };\n\n    case GetAll:\n      return { ...state,\n        blogs: action.blogs\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/kunal/teqie/react-blog/client/src/store/reducers/blogreducer.tsx"],"names":["BlogCreated","BlogUpdated","BlogRemoved","GetAll","drafted","initialState","id","blogs","blogReducer","state","action","type","concat","title","body","published","map","blog","_id","filter"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,WAAnC,EAAgDC,MAAhD,EAAwDC,OAAxD,QAAuE,gBAAvE;AAGA,MAAMC,YAAsB,GAAG;AAC3BC,EAAAA,EAAE,EAAE,EADuB;AAE3BC,EAAAA,KAAK,EAAE;AAFoB,CAA/B;AAKA,eAAe,SAASC,WAAT,GAA4E;AAAA;;AAAA,MAAvDC,KAAuD,uEAArCJ,YAAqC;AAAA,MAAvBK,MAAuB;;AACvF,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,WAAL;AAAkB,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,MAAZ,CAAmBF,MAAM,CAACH,KAAP,CAAa,CAAb,CAAnB;AAFF,OAAP;;AAKlB,SAAKN,WAAL;AAAkB,YAAM;AAAEY,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,UAA6BL,MAAM,CAACH,KAAP,CAAa,CAAb,CAAnC;AACA,aAAO,EACL,GAAGE,KADE;AAELF,QAAAA,KAAK,kBAAEE,KAAK,CAACF,KAAR,iDAAE,aAAaS,GAAb,CAAiBC,IAAI,IACxBA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACH,KAAP,CAAa,CAAb,EAAgBW,GAA7B,GACAD,IADA,GAEA,EAAE,GAAGA,IAAL;AAAWJ,UAAAA,KAAX;AAAkBC,UAAAA,IAAlB;AAAwBC,UAAAA;AAAxB,SAHG;AAFF,OAAP;;AASlB,SAAKb,WAAL;AAAkB,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYY,MAAZ,CAAmBF,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACH,KAAP,CAAa,CAAb,EAAgBW,GAAxD;AAFF,OAAP;;AAKlB,SAAKd,OAAL;AAAc,aAAO,EACD,GAAGK,KADF;AAEDF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYS,GAAZ,CAAgBC,IAAI,IACvBA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACH,KAAP,CAAa,CAAb,EAAgBW,GAA7B,GACA,EAAE,GAAGD,IAAL;AAAWF,UAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAA5B,SADA,GAEAE,IAHG;AAFN,OAAP;;AASd,SAAKd,MAAL;AAAa,aAAO,EACJ,GAAGM,KADC;AAEJF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAFV,OAAP;;AAKb;AAAS,aAAOE,KAAP;AAnCb;AAqCH","sourcesContent":["import { BlogCreated, BlogUpdated, BlogRemoved, GetAll, drafted } from \"../actionTypes\";\nimport { InitBlog } from \"../../types\";\n\nconst initialState: InitBlog = {\n    id: \"\",\n    blogs: []\n}\n\nexport default function blogReducer(state: InitBlog = initialState, action: any): InitBlog {\n    switch(action.type) {\n        case BlogCreated: return {\n                            ...state,\n                            blogs: state.blogs.concat(action.blogs[0]),\n                        }\n\n        case BlogUpdated: const { title, body, published } = action.blogs[0];\n                          return {\n                            ...state,\n                            blogs: state.blogs?.map(blog =>\n                                blog._id !== action.blogs[0]._id ? \n                                blog : \n                                { ...blog, title, body, published }\n                            )\n                        }\n\n        case BlogRemoved: return {\n                            ...state,\n                            blogs: state.blogs.filter(blog => blog._id !== action.blogs[0]._id)\n                        }\n\n        case drafted: return {\n                            ...state,\n                            blogs: state.blogs.map(blog => \n                                blog._id === action.blogs[0]._id ?\n                                { ...blog, published: !blog.published } :\n                                blog\n                            )\n                        }\n\n        case GetAll: return {\n                        ...state,\n                        blogs: action.blogs,\n                    }\n\n        default: return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}