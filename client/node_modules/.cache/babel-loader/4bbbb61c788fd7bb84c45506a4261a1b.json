{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { LoginStart, LoginFailure, LoginSuccess, Logout, Register } from \"../actionTypes\";\nimport { useEffect } from \"react\";\nconst localUser = localStorage.getItem(\"user\");\nconst initialState = {\n  user: localUser !== null ? JSON.parse(localUser) : {\n    email: \"\",\n    fullname: \"\",\n    username: \"\",\n    profilePic: \"\"\n  },\n  isLogged: false,\n  isRegistered: false,\n  isFetching: false\n};\nexport default function loginReducer() {\n  _s();\n\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n\n  switch (action.type) {\n    case LoginStart:\n      return { ...state,\n        isFetching: true\n      };\n\n    case LoginSuccess:\n      return { ...state,\n        user: action.payload,\n        isFetching: false,\n        isLogged: true\n      };\n\n    case LoginFailure:\n      return { ...state,\n        isFetching: false,\n        isLogged: true\n      };\n\n    case Logout:\n      return { ...state,\n        user: {\n          username: \"\",\n          fullname: \"\",\n          email: \"\",\n          profilePic: \"\"\n        },\n        isFetching: false,\n        isLogged: false\n      };\n\n    case Register:\n      return { ...state,\n        isRegistered: true\n      };\n\n    default:\n      return state;\n  }\n}\n\n_s(loginReducer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"sources":["/home/kunal/teqie/react-blog/client/src/store/reducers/loginreducer.tsx"],"names":["LoginStart","LoginFailure","LoginSuccess","Logout","Register","useEffect","localUser","localStorage","getItem","initialState","user","JSON","parse","email","fullname","username","profilePic","isLogged","isRegistered","isFetching","loginReducer","state","action","setItem","stringify","type","payload"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,YAAnC,EAAiDC,MAAjD,EAAyDC,QAAzD,QAAyE,gBAAzE;AAEA,SAASC,SAAT,QAA0B,OAA1B;AAEA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAlB;AAEA,MAAMC,YAAsB,GAAG;AAC3BC,EAAAA,IAAI,EAAGJ,SAAS,KAAK,IAAf,GAAuBK,IAAI,CAACC,KAAL,CAAWN,SAAX,CAAvB,GACL;AACGO,IAAAA,KAAK,EAAE,EADV;AAEGC,IAAAA,QAAQ,EAAE,EAFb;AAGGC,IAAAA,QAAQ,EAAE,EAHb;AAIGC,IAAAA,UAAU,EAAE;AAJf,GAF0B;AAS3BC,EAAAA,QAAQ,EAAE,KATiB;AAU3BC,EAAAA,YAAY,EAAE,KAVa;AAW3BC,EAAAA,UAAU,EAAE;AAXe,CAA/B;AAcA,eAAe,SAASC,YAAT,GAA+F;AAAA;;AAAA,MAAzEC,KAAyE,uEAAjEZ,YAAiE;AAAA,MAAnDa,MAAmD;AAC1GjB,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6BZ,IAAI,CAACa,SAAL,CAAeH,KAAK,CAACX,IAArB,CAA7B;AACH,GAFQ,EAEN,CAACW,KAAK,CAACX,IAAP,CAFM,CAAT;;AAIA,UAAOY,MAAM,CAACG,IAAd;AACI,SAAKzB,UAAL;AAAiB,aAAO,EACJ,GAAGqB,KADC;AAEJF,QAAAA,UAAU,EAAE;AAFR,OAAP;;AAKjB,SAAKjB,YAAL;AAAmB,aAAO,EACN,GAAGmB,KADG;AAENX,QAAAA,IAAI,EAAEY,MAAM,CAACI,OAFP;AAGNP,QAAAA,UAAU,EAAE,KAHN;AAINF,QAAAA,QAAQ,EAAE;AAJJ,OAAP;;AAOnB,SAAKhB,YAAL;AAAmB,aAAO,EACN,GAAGoB,KADG;AAENF,QAAAA,UAAU,EAAE,KAFN;AAGNF,QAAAA,QAAQ,EAAE;AAHJ,OAAP;;AAKnB,SAAKd,MAAL;AAAe,aAAO,EACF,GAAGkB,KADD;AAEFX,QAAAA,IAAI,EAAE;AACFK,UAAAA,QAAQ,EAAE,EADR;AAEFD,UAAAA,QAAQ,EAAE,EAFR;AAGFD,UAAAA,KAAK,EAAE,EAHL;AAIFG,UAAAA,UAAU,EAAE;AAJV,SAFJ;AAQFG,QAAAA,UAAU,EAAE,KARV;AASFF,QAAAA,QAAQ,EAAE;AATR,OAAP;;AAWf,SAAKb,QAAL;AAAe,aAAO,EACF,GAAGiB,KADD;AAEFH,QAAAA,YAAY,EAAE;AAFZ,OAAP;;AAIf;AAAS,aAAOG,KAAP;AAjCb;AAmCH;;GAxCuBD,Y","sourcesContent":["import { LoginStart, LoginFailure, LoginSuccess, Logout, Register } from \"../actionTypes\";\nimport { UserType } from \"../../types.d\";\nimport { useEffect } from \"react\";\n\nconst localUser = localStorage.getItem(\"user\")\n\nconst initialState: UserType = {\n    user: (localUser !== null) ? JSON.parse(localUser) :\n    ({\n        email: \"\",\n        fullname: \"\",\n        username: \"\",\n        profilePic: \"\",\n    })\n    ,\n    isLogged: false,\n    isRegistered: false,\n    isFetching: false,\n}\n\nexport default function loginReducer(state = initialState, action: { type: string, payload?: any}): UserType  {\n    useEffect(() => {\n        localStorage.setItem(\"user\", JSON.stringify(state.user))\n    }, [state.user])\n\n    switch(action.type) {\n        case LoginStart: return {\n                            ...state,\n                            isFetching: true\n                        }\n\n        case LoginSuccess: return {\n                            ...state,\n                            user: action.payload,\n                            isFetching: false,\n                            isLogged: true\n                        }\n\n        case LoginFailure: return {\n                            ...state,\n                            isFetching: false,\n                            isLogged: true,\n                        }\n        case Logout :  return {\n                            ...state,\n                            user: {\n                                username: \"\",\n                                fullname: \"\",\n                                email: \"\",\n                                profilePic: \"\",\n                            },\n                            isFetching: false,\n                            isLogged: false\n                        }\n        case Register: return {\n                            ...state,\n                            isRegistered: true\n                        }\n        default: return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}