{"ast":null,"code":"import { LoginSuccess } from \"../actionTypes\";\nexport function thunkMiddleware(_ref) {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n  return next => action => typeof action === \"function\" ? action(dispatch, getState) : next(action);\n}\nexport const persistData = store => next => action => {\n  let localState = localStorage.getItem('user');\n\n  if (localState && typeof JSON.parse(localState) === 'object') {\n    localState = JSON.parse(localState);\n  } else {\n    localStorage = Object.assign({}, {\n      user: action.payload\n    });\n  }\n\n  let result;\n  let newAction;\n\n  switch (action.type) {\n    case LoginSuccess:\n      newAction = {\n        type: action.type\n      };\n      newAction.payload = localState;\n      localStorage.setItem('user', JSON.stringify(localState));\n      result = next(newAction);\n      return result;\n\n    case Logout:\n      newAction = {\n        type: action.type\n      };\n      newAction.payload = {\n        username: \"\",\n        fullname: \"\",\n        email: \"\",\n        profilePic: \"\"\n      }, localStorage.setItem('user', JSON.stringify(localState));\n      result = next(Action);\n      return result;\n\n    default:\n      return next(action);\n  }\n};","map":{"version":3,"sources":["/home/kunal/teqie/react-blog/client/src/store/middleware/middleware.js"],"names":["LoginSuccess","thunkMiddleware","dispatch","getState","next","action","persistData","store","localState","localStorage","getItem","JSON","parse","Object","assign","user","payload","result","newAction","type","setItem","stringify","Logout","username","fullname","email","profilePic","Action"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAGA,OAAO,SAASC,eAAT,OAA+C;AAAA,MAAtB;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAsB;AAClD,SAAQC,IAAD,IAAUC,MAAM,IAAI,OAAOA,MAAP,KAAkB,UAAlB,GACCA,MAAM,CAACH,QAAD,EAAWC,QAAX,CADP,GAECC,IAAI,CAACC,MAAD,CAFhC;AAGH;AAED,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAIH,IAAI,IAAIC,MAAM,IAAI;AAClD,MAAIG,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAjB;;AACA,MAAGF,UAAU,IAAI,OAAOG,IAAI,CAACC,KAAL,CAAWJ,UAAX,CAAP,KAAkC,QAAnD,EAA6D;AACzDA,IAAAA,UAAU,GAAGG,IAAI,CAACC,KAAL,CAAWJ,UAAX,CAAb;AACH,GAFD,MAGK;AACDC,IAAAA,YAAY,GAAGI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAACC,MAAAA,IAAI,EAAEV,MAAM,CAACW;AAAd,KAAlB,CAAf;AACH;;AAED,MAAIC,MAAJ;AACA,MAAIC,SAAJ;;AACA,UAAOb,MAAM,CAACc,IAAd;AAEI,SAAKnB,YAAL;AAAmBkB,MAAAA,SAAS,GAAG;AAACC,QAAAA,IAAI,EAAEd,MAAM,CAACc;AAAd,OAAZ;AACCD,MAAAA,SAAS,CAACF,OAAV,GAAoBR,UAApB;AACAC,MAAAA,YAAY,CAACW,OAAb,CAAqB,MAArB,EAA6BT,IAAI,CAACU,SAAL,CAAeb,UAAf,CAA7B;AACAS,MAAAA,MAAM,GAAGb,IAAI,CAACc,SAAD,CAAb;AACA,aAAOD,MAAP;;AAEpB,SAAKK,MAAL;AAAaJ,MAAAA,SAAS,GAAG;AAAEC,QAAAA,IAAI,EAAEd,MAAM,CAACc;AAAf,OAAZ;AACAD,MAAAA,SAAS,CAACF,OAAV,GAAoB;AACjBO,QAAAA,QAAQ,EAAE,EADO;AAEjBC,QAAAA,QAAQ,EAAE,EAFO;AAGjBC,QAAAA,KAAK,EAAE,EAHU;AAIjBC,QAAAA,UAAU,EAAE;AAJK,OAApB,EAMDjB,YAAY,CAACW,OAAb,CAAqB,MAArB,EAA6BT,IAAI,CAACU,SAAL,CAAeb,UAAf,CAA7B,CANC;AAODS,MAAAA,MAAM,GAAGb,IAAI,CAACuB,MAAD,CAAb;AACA,aAAOV,MAAP;;AAEZ;AAAS,aAAOb,IAAI,CAACC,MAAD,CAAX;AAnBb;AAqBH,CAhCM","sourcesContent":["import { LoginSuccess } from \"../actionTypes\";\n\n\nexport function thunkMiddleware({dispatch, getState}) {\n    return (next) => action => typeof action === \"function\" ? \n                                action(dispatch, getState) :\n                                next(action)\n}\n\nexport const persistData = store => next => action => {\n    let localState = localStorage.getItem('user');\n    if(localState && typeof JSON.parse(localState) === 'object') {\n        localState = JSON.parse(localState);\n    }\n    else {\n        localStorage = Object.assign({}, {user: action.payload});\n    }\n\n    let result;\n    let newAction;\n    switch(action.type)\n    {\n        case LoginSuccess: newAction = {type: action.type};\n                            newAction.payload = localState;\n                            localStorage.setItem('user', JSON.stringify(localState));\n                            result = next(newAction);\n                            return result;\n\n        case Logout: newAction = { type: action.type };\n                     newAction.payload = {\n                        username: \"\",\n                        fullname: \"\",\n                        email: \"\",\n                        profilePic: \"\",\n                    },\n                    localStorage.setItem('user', JSON.stringify(localState));\n                    result = next(Action)\n                    return result;\n\n        default: return next(action);\n    }\n}"]},"metadata":{},"sourceType":"module"}